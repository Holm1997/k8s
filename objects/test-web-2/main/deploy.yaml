# NAMESPACE
apiVersion: v1
kind: Namespace
metadata:
  name: test-web-2
---
# PVC 
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: test-web-2-pvc
  namespace: test-web-2
spec:
  storageClassName: nfs-client
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
# DEPLOYMENT
apiVersion : apps/v1
kind: Deployment
metadata:
  name: test-web-2-deployment
  namespace: test-web-2
  labels:
    app: k8s-test-web-2
spec:
  selector:
    matchLabels:
      project: test-web-2-frontend
  template:
    metadata:
      labels:
        project: test-web-2-frontend
    spec:
      volumes:
        - name: test-web-2-storage
          persistentVolumeClaim:
            claimName: test-web-2-pvc
      containers:
        - name: test-web-1-frontend
          image: nexus.dib/k8s-test:v2
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: "/usr/share/nginx/html"
              name: test-web-2-storage
          resources:
            limits:
              cpu: 500m
            requests:
              memory: 1000Mi
              cpu: 200m
---
# AUTOSCALING
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: test-web-2-autoscaling
  namespace: test-web-2
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: test-web-2-deployment
  minReplicas: 4
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 1
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 1
---
# SERVICE
apiVersion: v1
kind: Service
metadata:
  labels:
    app: k8s-test-web-2
  name: test-web-2-service
  namespace: test-web-2
spec:
  type: ClusterIP
  internalTrafficPolicy: Cluster
  selector:
    project: test-web-2-frontend
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
---
# INGRESS
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-web-2-ingress
  namespace: test-web-2
spec:
  rules:
  - host: test2.dib
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: test-web-2-service
            port:
              number: 80
  ingressClassName: nginx